@model ScienceAndCiaoWeb.Models.RentalAndDetailsViewModel
@using ScienceAndCiao.Models.User
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Enter Your Email Address for Rental Information</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, new { id = "email", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { id = "kitTitle", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
    

        @{ List<SelectListItem> listItem = new List<SelectListItem>();
                            listItem.Add(new SelectListItem
                            {
                                Text = StaticDetails.OneMonth,
                                Value = StaticDetails.MonthlyMembershipFee
                            });
                            listItem.Add(new SelectListItem
                            {
                                Text = StaticDetails.SixMonth,
                                Value = StaticDetails.SixMonthmemberShipFee
                            }); }

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Duration, listItem, new { id = "ddlDuration", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="nameAndDob" style="display:none">

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label(" ", new { id = "firstName", style = "width:350px;", @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label(" ", new { id = "birthDate", style = "width:350px;", @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RentalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label(" ", new { id = "lblRentalPrice", style = "width:350px;", @class = "form-control" })

                    @Html.Label("Discounted Rate", new { id = "lblDiscountDisplay", style = "width:350px;color:green;display:none;" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Label(" ", new { id = "lblStock", style = "width:350px;", @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Continue" id="btnStock" class="btn btn-sm btn-success" />
                <input type="submit" value="Reserve" id="btnSubmit" style="display:none;" class="btn btn-sm btn-success" />
            </div>
        </div>

    </div>            }

@section scripts{

    <script>
        $(document).ready(function () {
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('email'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                remote: {
                    url: '/API/UsersAPI?type=email&query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#email').typeahead({ highlight: true, minLength: 3 },
                {
                    name: 'customers',
                    display: 'Email',
                    source: customers
                });


            var kitTitle = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Title'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                remote: {
                    url: '/API/KitAPI?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#kitTitle').typeahead({ highlight: true, minLength: 3 },
                {
                    name: 'kitTitles',
                    display: 'Title',
                    source: kitTitle
                });
        });


        $('#btnStock').click(function () {
            var title = document.getElementById("kitTitle").value;
            var email = document.getElementById("email").value;
            var Duration = document.getElementById("ddlDuration").value;
            var rentalPrice = 0.0;
            $.ajax({
                url: '/api/KitAPI?type=stock&title=' + title,
                type: 'GET',
                dataType: 'json',
                success: function (data, textStatus, xhr) {
                    $('#lblStock').text(data + ' stock')
                    if (data > 0) {
                        document.getElementById('btnSubmit').style.display = '';
                    }
                    else {
                        document.getElementById('btnSubmit').value = "Not Available";
                        document.getElementById('btnSubmit').style.display = '';
                        document.getElementById('btnSubmit').disabled = true;
                        document.getElementById('btnSubmit').classList.remove('btn-success');
                        document.getElementById('btnSubmit').classList.add('btn-danger');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });

            $.ajax({
                url: '/api/KitAPI?type=price&title=' + title + '&Duration=' + Duration + '&email=' + email,
                type: 'GET',
                dataType: 'json',
                success: function (data, textStatus, xhr) {
                    rentalPrice = data;
                    $('#lblRentalPrice').text(data)
                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });

            $.ajax({
                url: '/api/UsersAPI?type=name&query=' + email,
                type: 'GET',
                dataType: 'json',
                success: function (data, textStatus, xhr) {
                    var fields = data.split(';')

                    $('#firstName').text(fields[0]);

                    var birthDate = fields[1].split(' ');
                    $('#birthDate').text(birthDate[0])
                    document.getElementById("btnStock").style.display = 'none';
                    //This is how the div gets unhidden.
                    document.getElementById("nameAndDob").style.display = '';
                    var rentalCount = fields[2];
                    if (rentalCount == 10) {
                        $('#lblRentalPrice').text(rentalPrice - (rentalPrice * 20 / 100));
                        document.getElementById("lblDiscountDisplay").style.display = '';
                    }

                },
                error: function (xhr, textStatus, errorThrown) {

                }
            });



        });
    </script>


}